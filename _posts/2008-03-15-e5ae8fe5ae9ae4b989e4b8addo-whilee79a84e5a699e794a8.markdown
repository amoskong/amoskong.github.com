---
author: amosk
comments: true
date: 2008-03-15 12:18:03+00:00
layout: post
slug: '%e5%ae%8f%e5%ae%9a%e4%b9%89%e4%b8%addo-while%e7%9a%84%e5%a6%99%e7%94%a8'
title: 宏定义中do while的妙用
wordpress_id: 203
categories:
- Web
---

//宏定义中 do-while 的妙用
//这个程序是为了说明在宏定义是使用do while的作用。

#include
#define IF_A if (N == 0)                                \
        printf("IF_A:\tN等于0\n")

#define IF_Do_While do {                                \
        if (N == 0)                                     \
                printf("IF_Do_While:\tN等于0\n");       \
} while (0)

int main(int argc, char **argv)
{
        int N;
        printf("Please input N:\t");
        scanf("%d", &N);
        printf("--------------------\n");
        if (N >= 0)
                IF_A;
        else
                printf("Else:\tN小于0\n");

        printf("--------------------\n");
        if (N >= 0)
                IF_Do_While;
        else
                printf("Else:\tN小于0\n");
        printf("--------------------\n");
        return 0;
}

编译程序时，对于"else"编译器会寻找前面最近的（还没有与其他else匹配的）if关键字进行匹配， do while语句的巧妙使用则解决了错误匹配带来的问题。如N=3时，上边代码第一个宏就会出错。

**补充：**

do{..}while(0) 只是为了更容易地把多个语句集合到这个宏定义中，让这个宏看起来更像一个函数。

宏中用到if()时就可能会出问题，比如：

    
    #define FOOBAR() foo(); bar()
    if (!something)
    FOOBAR();


如果something为假，是只执行foo();

用{}把所有语句括起来也可以，但使用FOOBAR()时不能带分号，这可不像函数。{}是gcc的一个扩展，并不是标准的。
而且编译器会自动优化，不会影响执行速度。
