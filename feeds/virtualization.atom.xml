<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title></title><link href="http://localhost:8000/" rel="alternate"></link><link href="http://localhost:8000/feeds/virtualization.atom.xml" rel="self"></link><id>http://localhost:8000/</id><updated>2014-09-20T01:16:42+08:00</updated><entry><title>收缩QEMU虚拟机磁盘空间</title><link href="http://localhost:8000/virtualization/e694b6e7bca9qemue8999ae68b9fe69cbae7a381e79b98e7a9bae997b4.html" rel="alternate"></link><updated>2014-09-20T01:16:42+08:00</updated><author><name>Amos</name></author><id>tag:localhost:8000,2014-09-20:virtualization/e694b6e7bca9qemue8999ae68b9fe69cbae7a381e79b98e7a9bae997b4.html</id><summary type="html">&lt;p&gt;相机照了很多照片，删了可惜，只能精选一些放网上．还有很多景色照片全部丢到百度网盘了．再加上很多虚拟机磁盘镜像，硬盘空间经常不够用．除了删除大量不经典的照片，就是在虚拟机镜像上想办法了．&lt;/p&gt;
&lt;p&gt;qcow2磁盘镜像在创建后只占很小的空间，随着虚拟机里磁盘空间的真正的使用，镜像会越来越大．即便文件删除后，空间也不会自动收缩．下面是的方法可以用于回收为使用的磁盘空间．&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;Reclaimed&lt;/span&gt; &lt;span class="n"&gt;space&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;my&lt;/span&gt; &lt;span class="n"&gt;old&lt;/span&gt; &lt;span class="n"&gt;guests&lt;/span&gt; &lt;span class="n"&gt;images&lt;/span&gt;

  &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;Fill&lt;/span&gt; &lt;span class="n"&gt;unused&lt;/span&gt; &lt;span class="n"&gt;space&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;zero&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="n"&gt;Linux&lt;/span&gt; &lt;span class="n"&gt;guests&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
     &lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="n"&gt;dd&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;=/&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;zero&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;out&lt;/span&gt; &lt;span class="n"&gt;bs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="n"&gt;M&lt;/span&gt;
     &lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="n"&gt;rm&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;out&lt;/span&gt;

    &lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="n"&gt;Windows&lt;/span&gt; &lt;span class="n"&gt;guests&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
     &lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="n"&gt;download&lt;/span&gt; &lt;span class="n"&gt;sdelete&lt;/span&gt; &lt;span class="n"&gt;from&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//technet.microsoft.com/en-us/sysinternals/bb897443.aspx&lt;/span&gt;
     &lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="n"&gt;sdelete&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;

  &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="n"&gt;qemu&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;img&lt;/span&gt; &lt;span class="n"&gt;convert&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;O&lt;/span&gt; &lt;span class="n"&gt;qcow2&lt;/span&gt; &lt;span class="n"&gt;orig&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;qcow2&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;qcow2&lt;/span&gt;
     &lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="n"&gt;rm&lt;/span&gt; &lt;span class="n"&gt;orig&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;qcow2&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;收缩了几个用了很长时间的镜像，笔记本有剩余40+G空间感觉很富有 :-)&lt;/p&gt;</summary></entry><entry><title>level-triggered interrupt &amp; edge-triggered interrupt （电平触发中断 与 边沿触发中断）</title><link href="http://localhost:8000/virtualization/level-triggered-interrupt-edge-triggered-interrupt-efbc88e794b5e5b9b3e8a7a6e58f91e4b8ade696ad-e4b88e-e8beb9e6b2bfe8a7a6e58f91e4b8ade696adefbc89.html" rel="alternate"></link><updated>2014-03-29T03:52:13+08:00</updated><author><name>Amos</name></author><id>tag:localhost:8000,2014-03-29:virtualization/level-triggered-interrupt-edge-triggered-interrupt-efbc88e794b5e5b9b3e8a7a6e58f91e4b8ade696ad-e4b88e-e8beb9e6b2bfe8a7a6e58f91e4b8ade696adefbc89.html</id><summary type="html">&lt;p&gt;（谢谢 wanpin Li对这篇博客的反馈，让我重新发现了一些问题）&lt;/p&gt;
&lt;p&gt;两种触发方式，是为了在多个设备共享中断线时，实现流量控制。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;所谓边沿触发，就是电平发生变化（通常是从高到低）时触发的中断 （CPU忙时中断可能丢失）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;所谓电平触发，就是设备保持中断请求引脚（中断线）处于预设的有效触发电频（通常为高），中断会一直被请求（CPU忙时中断也不会丢失）。为了避免中断请求被重复处理，需要在处理前 标记 irq，然后 ACK irq（复位中断请求引脚为无效电频，以便能够接受其他中断请求），处理中断，然后 取消 irq 标记。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;KVM 最先只支持 edge-triggered 中断，使用一个irqfd通知guest，电频下降边沿可在注入模拟中一次完成。看下面代码连续调用两个kvm_set_irq()，倒数第二个参数为电平。&lt;/p&gt;
&lt;p&gt;虚拟机 level-triggered 的注入仍然依赖的是userspace，在QEMU里模拟了 PCI / IOapic /LAPIC(8259)。KVM_IRQFD ioctl 是中断注入的接口，唯一参数 kvm_irqfd 结构体包含了一个irqfd、gsi(全局系统中断)，flags。&lt;/p&gt;
&lt;p&gt;KVM 在 2012 年也添加了 level-triggered 中断模拟 [1]，添加了一个 resamplefd (为eventfd) 到 kvm_irqfd 结构体，用它来通知guest取消 irq 标记。来自所有guests、设备的请求被放在链表中管理，所有的 resample irqfds使用同一个 IRQ源ID，所以 de-assert（复位中断请求引脚为无效电平，也就是清除中断状态寄存器--ISR）只需要一次，而每个irqfd都需要单独通知 guest 一次（用于通知新的resampler使用这个gsi）。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt;
&lt;span class="nf"&gt;irqfd_inject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;work_struct&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;work&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;_irqfd&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;irqfd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;container_of&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;work&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;_irqfd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;inject&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;kvm&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;kvm&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;irqfd&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;kvm&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;irqfd&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;resampler&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;  &lt;span class="c1"&gt;//edge-triggered&lt;/span&gt;
        &lt;span class="n"&gt;kvm_set_irq&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;kvm&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;KVM_USERSPACE_IRQ_SOURCE_ID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;irqfd&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;gsi&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;kvm_set_irq&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;kvm&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;KVM_USERSPACE_IRQ_SOURCE_ID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;irqfd&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;gsi&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="c1"&gt;//level-triggered&lt;/span&gt;
        &lt;span class="n"&gt;kvm_set_irq&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;kvm&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;KVM_IRQFD_RESAMPLE_IRQ_SOURCE_ID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="n"&gt;irqfd&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;gsi&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//assert irq&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="cm"&gt;/*&lt;/span&gt;
&lt;span class="cm"&gt; * Since resampler irqfds share an IRQ source ID, we de-assert once&lt;/span&gt;
&lt;span class="cm"&gt; * then notify all of the resampler irqfds using this GSI.  We can&amp;#39;t&lt;/span&gt;
&lt;span class="cm"&gt; * do multiple de-asserts or we risk racing with incoming re-asserts.&lt;/span&gt;
&lt;span class="cm"&gt; */&lt;/span&gt;
&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt;
&lt;span class="nf"&gt;irqfd_resampler_ack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;kvm_irq_ack_notifier&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;kian&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="p"&gt;...&lt;/span&gt;
    &lt;span class="n"&gt;kvm_set_irq&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;resampler&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;kvm&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;KVM_IRQFD_RESAMPLE_IRQ_SOURCE_ID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;resampler&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;notifier&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gsi&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//de-assert irq for level-triggered interrupt&lt;/span&gt;

    &lt;span class="n"&gt;list_for_each_entry_rcu&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;irqfd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;resampler&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;resampler_link&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;eventfd_signal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;irqfd&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;resamplefd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//notify resimplers&lt;/span&gt;
    &lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;[1] commit 7a84428af  [PATCH] KVM: Add resampling irqfds for level triggered interrupts&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;Reference&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="n"&gt;linux&lt;/span&gt;&lt;span class="sr"&gt;/virt/kvm/&lt;/span&gt;&lt;span class="n"&gt;eventfd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;c&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
  &lt;span class="n"&gt;irqfd_inject&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;work_struct&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;work&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;irqfd_shutdown&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;_irqfd&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;irqfd&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;irqfd_resampler_ack&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;kvm_irq_ack_notifier&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;kian&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;kvm_irqfd&lt;/span&gt;
  &lt;span class="n"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;_irqfd&lt;/span&gt;
  &lt;span class="n"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;_irqfd_resampler&lt;/span&gt;
&lt;span class="n"&gt;linux&lt;/span&gt;&lt;span class="sr"&gt;/virt/kvm/i&lt;/span&gt;&lt;span class="n"&gt;rqchip&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;c&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
  &lt;span class="n"&gt;kvm_set_irq&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;kvm&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;source_id&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;level&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line_status&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;linux&lt;/span&gt;&lt;span class="sr"&gt;/virt/kvm/i&lt;/span&gt;&lt;span class="n"&gt;rq_comm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;c&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
  &lt;span class="n"&gt;kvm_reqeust_irq_source_id&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;kvm&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;kvm&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary></entry><entry><title>封装一个sendkey函数向虚拟机一次性发送字符串</title><link href="http://localhost:8000/virtualization/e5b081e8a385e4b880e4b8aasendkeye587bde695b0e59091e8999ae68b9fe69cbae4b880e6aca1e680a7e58f91e98081e5ad97e7aca6e4b8b2.html" rel="alternate"></link><updated>2014-03-06T05:59:43+08:00</updated><author><name>Amos</name></author><id>tag:localhost:8000,2014-03-06:virtualization/e5b081e8a385e4b880e4b8aasendkeye587bde695b0e59091e8999ae68b9fe69cbae4b880e6aca1e680a7e58f91e98081e5ad97e7aca6e4b8b2.html</id><summary type="html">&lt;p&gt;QEMU 提供一个 sendkey的 Monitor 命令，用来向虚拟机发送单个字符，或者组合键。之所以只支持单个字符，是因为这里需要对空格、ctrl，回车等进行转换，也需要支持keycode的输入。
libvir的virsh调用QEMU的sendkey命令为上层提供类似的功能。但有一个新的需求就是一次输入连续的字符串。我们可以从三个不同层面来实现这个需求，分别是QEMU、libvirt，还有用户自己的脚本、程序里。&lt;/p&gt;
&lt;p&gt;这里我跟倾向从用户程序封装出一个转换函数，实现一次连续输入，这样也更加灵活一些，方便扩展。因为QEMU、libvirt接受的多种类型的KEY，如果再把字符转换加进去，会导致接口复杂，语义表达带来冲突。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;amos&lt;/span&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nx"&gt;amosk&lt;/span&gt; &lt;span class="nx"&gt;qemu&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt; &lt;span class="nx"&gt;cat&lt;/span&gt; &lt;span class="nx"&gt;sendkey&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sh&lt;/span&gt; 
&lt;span class="nx"&gt;DOM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;rhel6u5_x64&lt;/span&gt;

&lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="err"&gt;封装一下&lt;/span&gt;&lt;span class="nx"&gt;sendkey&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="err"&gt;函数，调用&lt;/span&gt;&lt;span class="nx"&gt;virsh&lt;/span&gt; &lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt; &lt;span class="err"&gt;命令想虚拟机发送字符串&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;sendkey&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;
    &lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="nx"&gt;expr&lt;/span&gt; &lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$str&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;=&lt;/span&gt;&lt;span class="nx"&gt;$length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
        &lt;span class="kr"&gt;char&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="nx"&gt;expr&lt;/span&gt; &lt;span class="nx"&gt;substr&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$str&amp;quot;&lt;/span&gt; &lt;span class="nx"&gt;$i&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="cp"&gt;[&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$char&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;
            &lt;span class="kr"&gt;char&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;spc&amp;quot;&lt;/span&gt;
        &lt;span class="nx"&gt;fi&lt;/span&gt;
        &lt;span class="nx"&gt;echo&lt;/span&gt; &lt;span class="nx"&gt;virsh&lt;/span&gt; &lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt; &lt;span class="nx"&gt;$DOM&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$char&amp;quot;&lt;/span&gt;
    &lt;span class="nx"&gt;done&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;sendkey&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;root&amp;quot;&lt;/span&gt;
&lt;span class="nx"&gt;echo&lt;/span&gt; &lt;span class="nx"&gt;virsh&lt;/span&gt; &lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt; &lt;span class="nx"&gt;$DOM&lt;/span&gt; &lt;span class="nx"&gt;kp_enter&lt;/span&gt;
&lt;span class="nx"&gt;sendkey&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;shutdown -h now&amp;quot;&lt;/span&gt;
&lt;span class="nx"&gt;echo&lt;/span&gt; &lt;span class="nx"&gt;virsh&lt;/span&gt; &lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt; &lt;span class="nx"&gt;$DOM&lt;/span&gt; &lt;span class="nx"&gt;kp_enter&lt;/span&gt;





&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;amos&lt;/span&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nx"&gt;amosk&lt;/span&gt; &lt;span class="nx"&gt;qemu&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt; &lt;span class="nx"&gt;bash&lt;/span&gt; &lt;span class="nx"&gt;sendkey&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sh&lt;/span&gt; 
&lt;span class="nx"&gt;virsh&lt;/span&gt; &lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt; &lt;span class="nx"&gt;rhel6u5_x64&lt;/span&gt; &lt;span class="nx"&gt;r&lt;/span&gt;
&lt;span class="nx"&gt;virsh&lt;/span&gt; &lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt; &lt;span class="nx"&gt;rhel6u5_x64&lt;/span&gt; &lt;span class="nx"&gt;o&lt;/span&gt;
&lt;span class="nx"&gt;virsh&lt;/span&gt; &lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt; &lt;span class="nx"&gt;rhel6u5_x64&lt;/span&gt; &lt;span class="nx"&gt;o&lt;/span&gt;
&lt;span class="nx"&gt;virsh&lt;/span&gt; &lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt; &lt;span class="nx"&gt;rhel6u5_x64&lt;/span&gt; &lt;span class="nx"&gt;t&lt;/span&gt;
&lt;span class="nx"&gt;virsh&lt;/span&gt; &lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt; &lt;span class="nx"&gt;rhel6u5_x64&lt;/span&gt; &lt;span class="nx"&gt;kp_enter&lt;/span&gt;
&lt;span class="nx"&gt;virsh&lt;/span&gt; &lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt; &lt;span class="nx"&gt;rhel6u5_x64&lt;/span&gt; &lt;span class="nx"&gt;s&lt;/span&gt;
&lt;span class="nx"&gt;virsh&lt;/span&gt; &lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt; &lt;span class="nx"&gt;rhel6u5_x64&lt;/span&gt; &lt;span class="nx"&gt;h&lt;/span&gt;
&lt;span class="nx"&gt;virsh&lt;/span&gt; &lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt; &lt;span class="nx"&gt;rhel6u5_x64&lt;/span&gt; &lt;span class="nx"&gt;u&lt;/span&gt;
&lt;span class="nx"&gt;virsh&lt;/span&gt; &lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt; &lt;span class="nx"&gt;rhel6u5_x64&lt;/span&gt; &lt;span class="nx"&gt;t&lt;/span&gt;
&lt;span class="nx"&gt;virsh&lt;/span&gt; &lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt; &lt;span class="nx"&gt;rhel6u5_x64&lt;/span&gt; &lt;span class="nx"&gt;d&lt;/span&gt;
&lt;span class="nx"&gt;virsh&lt;/span&gt; &lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt; &lt;span class="nx"&gt;rhel6u5_x64&lt;/span&gt; &lt;span class="nx"&gt;o&lt;/span&gt;
&lt;span class="nx"&gt;virsh&lt;/span&gt; &lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt; &lt;span class="nx"&gt;rhel6u5_x64&lt;/span&gt; &lt;span class="nx"&gt;w&lt;/span&gt;
&lt;span class="nx"&gt;virsh&lt;/span&gt; &lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt; &lt;span class="nx"&gt;rhel6u5_x64&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt;
&lt;span class="nx"&gt;virsh&lt;/span&gt; &lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt; &lt;span class="nx"&gt;rhel6u5_x64&lt;/span&gt; &lt;span class="nx"&gt;spc&lt;/span&gt;
&lt;span class="nx"&gt;virsh&lt;/span&gt; &lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt; &lt;span class="nx"&gt;rhel6u5_x64&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;
&lt;span class="nx"&gt;virsh&lt;/span&gt; &lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt; &lt;span class="nx"&gt;rhel6u5_x64&lt;/span&gt; &lt;span class="nx"&gt;h&lt;/span&gt;
&lt;span class="nx"&gt;virsh&lt;/span&gt; &lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt; &lt;span class="nx"&gt;rhel6u5_x64&lt;/span&gt; &lt;span class="nx"&gt;spc&lt;/span&gt;
&lt;span class="nx"&gt;virsh&lt;/span&gt; &lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt; &lt;span class="nx"&gt;rhel6u5_x64&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt;
&lt;span class="nx"&gt;virsh&lt;/span&gt; &lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt; &lt;span class="nx"&gt;rhel6u5_x64&lt;/span&gt; &lt;span class="nx"&gt;o&lt;/span&gt;
&lt;span class="nx"&gt;virsh&lt;/span&gt; &lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt; &lt;span class="nx"&gt;rhel6u5_x64&lt;/span&gt; &lt;span class="nx"&gt;w&lt;/span&gt;
&lt;span class="nx"&gt;virsh&lt;/span&gt; &lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt; &lt;span class="nx"&gt;rhel6u5_x64&lt;/span&gt; &lt;span class="nx"&gt;kp_enter&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary></entry><entry><title>KVM Forum 2011 Videos</title><link href="http://localhost:8000/virtualization/kvm-forum-2011-videos.html" rel="alternate"></link><updated>2011-10-10T09:29:20+08:00</updated><author><name>Amos</name></author><id>tag:localhost:8000,2011-10-10:virtualization/kvm-forum-2011-videos.html</id><summary type="html">&lt;p&gt;&lt;a href="http://www.youtube.com/playlist?list=PL7C0F52E2227156B3"&gt;http://www.youtube.com/playlist?list=PL7C0F52E2227156B3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="/blog/wp-content/uploads/kvmformu2011video.png" src="/blog/wp-content/uploads/kvmformu2011video.png" /&gt;&lt;/p&gt;</summary></entry><entry><title>KVM Forum 2011</title><link href="http://localhost:8000/virtualization/kvm-forum-2011.html" rel="alternate"></link><updated>2011-08-23T22:45:01+08:00</updated><author><name>Amos</name></author><id>tag:localhost:8000,2011-08-23:virtualization/kvm-forum-2011.html</id><summary type="html">&lt;h3 id="from-httplogamitshahnet201108kvm-forum-2011html-by-amit-shah"&gt;From: &lt;a href="http://log.amitshah.net/2011/08/kvm-forum-2011.html"&gt;http://log.amitshah.net/2011/08/kvm-forum-2011.html&lt;/a&gt; by &lt;a href="http://www.blogger.com/profile/10926476078134010150"&gt;Amit Shah&lt;/a&gt;&lt;/h3&gt;
&lt;h3 id="kvm-forum-2011"&gt;KVM Forum 2011&lt;/h3&gt;
&lt;p&gt;This year's KVM Forum, like last year's, was co-located with LinuxCon NA.  Vancouver city played the host this year.&lt;/p&gt;
&lt;p&gt;The interest in KVM has been rising over the years; from the first Forum in 2008, when we were just about 30 developers in a single room presenting work done and chatting about directions to take (the virtio design was hashed out during this conference), this year there were about 150 attendees, discussing optimising KVM instances and tracing the guests.  That's a really big leap in three years.&lt;/p&gt;
&lt;p&gt;Due to lots and lots of good talk submissions, not all of which could be rejected, the talk slots were reduced to 30 minutes per talk and there were parallel tracks in the afternoon sessions.  This allowed for more talks, but small Q&amp;amp;A sessions, and obviously, having to miss out on some talks due to another talk happening at the same time. All the talks have been video-recorded, though, and they should appear soon on the &lt;a href="http://www.linux-kvm.org/page/KVM_Forum_2011"&gt;Forum page&lt;/a&gt;.
&lt;!-- more --&gt;
Some brief notes on the talks I attended:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.linux-kvm.org/wiki/images/a/aa/2011-forum-keynote.pdf"&gt;Avi's keynote&lt;/a&gt; started off the Forum. One of the main points was the lack of marketing in KVM, and how the formation of the &lt;a href="http://www.openvirtualizationalliance.org/index.html"&gt;Open Virtualization Alliance&lt;/a&gt;to bridge the gap.  He also talked about an ARM port finally getting some development (on his 2008 prediction of an ARM port coming soon not materialising, he said in his 2010 keynote: "this is a case of reality not catching up with predictions").&lt;/p&gt;
&lt;p&gt;Paul Mackerras then talked about &lt;a href="http://www.linux-kvm.org/wiki/images/5/5d/2011-forum-KVM_on_the_IBM_POWER7_Processor.pdf"&gt;KVM on the POWER7&lt;/a&gt; processor, another processor to get virt extensions. He talked of replacing pHype with KVM and the challenges to run custom firmware and Linux directly on the machines, as opposed to the default firmware which can only run pHype.&lt;/p&gt;
&lt;p&gt;Alex Williamson talked about &lt;a href="http://www.linux-kvm.org/wiki/images/d/d1/2011-forum-VFIO.pdf"&gt;VFIO-based PCI device assignment&lt;/a&gt;.  The current device assignment code makes the kvm.ko module a device driver for the device to be assigned to the guest (I'm to blame for that, I wrote that code). The idea with VFIO is to move the complexity of device assignment into userspace.  VFIO is a device driver which exposes devices in /dev/vfio*, via which the device can be configured and controlled.  This is a much more cleaner and secure way of doing device assignment.&lt;/p&gt;
&lt;p&gt;Kevin Wolf talked on the current state of block file formats, and the &lt;a href="http://www.linux-kvm.org/wiki/images/6/63/2011-forum-qcow2.pdf"&gt;next-gen block file format&lt;/a&gt;.  He criticised the NIH syndrome of people developing new formats in isolation instead of enhancing the current ones.  He's working on collecting the best ideas from QED and FVD, the newest formats, and putting them into QCOW3 while retaining the features from QCOW2, which the other formats dropped.&lt;/p&gt;
&lt;p&gt;Stefan Hajnoczi and Paolo Bonzini then talked of a new &lt;a href="http://www.linux-kvm.org/wiki/images/f/f5/2011-forum-virtio-scsi.pdf"&gt;virtio-scsi transport&lt;/a&gt;, Stefan is working on the new in-kernel SCSI target and using vhost to accelerate communication.  Paolo has already written the virtio-scsi spec.&lt;/p&gt;
&lt;p&gt;Asias He presented the &lt;a href="http://www.linux-kvm.org/wiki/images/c/c5/2011-forum-native-linux-kvm-tool.pdf"&gt;Native Linux KVM tool&lt;/a&gt;. My reaction on the presentation was that they started out as a toy project to run Linux guests, but their planned feature set sounds like they are going to replicate qemu.  That's not a bad thing, though, KVM (the kernel module) was designed to be able to drive multiple userspace hypervisors, and this is the first one that's making some news.&lt;/p&gt;
&lt;p&gt;That ended the first day's morning session.  The afternoon session had parallel tracks, I attended the following:&lt;/p&gt;
&lt;p&gt;Andrea Arcangeli's talk on the &lt;a href="http://www.linux-kvm.org/wiki/images/a/a6/2011-forum-aa-numa.pdf"&gt;future of Memory Management in KVM&lt;/a&gt; had quite a lot of TODO items.  He particularly talked on NUMA management and his ongoing work on it. Current NUMA policies are static; he wants to make them dynamic, with the guest moving to the node where RAM is allocated, and vice-versa.&lt;/p&gt;
&lt;p&gt;Rik van Riel then talked about &lt;a href="http://www.linux-kvm.org/wiki/images/f/ff/2011-forum-memory-overcommit.pdf"&gt;some more MM work&lt;/a&gt;: free page hinting, which can improve the memory utilisation both in the host and guest, and automatic memory resizing.  There might be some drawbacks to this as free page hinting may not consider THP and end up breaking huge pages.&lt;/p&gt;
&lt;p&gt;Next was "&lt;a href="http://www.linux-kvm.org/wiki/images/7/71/2011-forum-porting-to-smartos.pdf"&gt;experiences porting KVM to SmartOS&lt;/a&gt;", a lively and animated talk by Bryan Cantrill. This talked about porting the kvm module and qemu-kvm to Illumos, a Solaris clone.  They primarily want the benefits of ZFS, DTrace, Zones and KVM. No matter how much interesting it sounds, the question on licensing was addressed vaguely (if at all) during the talk.  In a private chat later, Bryan mentioned there's no violation at all.  There's some talk at &lt;a href="https://lwn.net/Articles/455008/"&gt;lwn.net&lt;/a&gt;on licensing as well.&lt;/p&gt;
&lt;p&gt;Michael Tsirkin talked on &lt;a href="http://www.linux-kvm.org/wiki/images/4/4f/2011-forum-virtio_net_whatsnew.odp"&gt;new virtio networking features&lt;/a&gt;. Main was the event indexing feature which reduces the exit interrupts to host if there are pending exits and a new buffer is queued in the vring.  Sort of like NAPI for virtio. He also talked about zero-copy TX and filtering, and the security pitfalls of doing so.&lt;/p&gt;
&lt;p&gt;Ryan Harper then talked of &lt;a href="http://www.linux-kvm.org/wiki/images/7/72/2011-forum-keep-a-limit-on-it-io-throttling-in-qemu.pdf"&gt;IO throttling in QEMU&lt;/a&gt;, a feature that uses cgroups to ensure guests don't go over their allocated quota of IO activity.&lt;/p&gt;
&lt;p&gt;A couple of lightning talks were held, where Dan Magenheimer talked of Transcendent memory, and how that can help with the work that Rik is doing.&lt;/p&gt;
&lt;p&gt;A few BOF sessions were lined up, people gathered in groups to discuss.  I caught hold of Hans de Goede, Alon Levy, Anthony Liguori and Gerd Hoffmann to discuss the state of chardevs in QEMU.  Hans had initiated a discussion just prior to the Forum on the non-upstream RHEL and Fedora patches that we carry for chardev flow control.  Anthony mentioned some races in the existing implementation and came up with his own.  He promised to merge the cleanup patchset soon and float the flow control patches to the mailing list.&lt;/p&gt;
&lt;p&gt;My other topic, on guest - host communication, got fizzled out, partly due to my jet lag not allowing me to concentrate much, and the other interesting topic, moving qemu away from C.  I used that time to talk with other people.&lt;/p&gt;
&lt;p&gt;That ended day 1 of talks. All the attendees then headed out to a pub nearby to exchange stories over beer.&lt;/p&gt;
&lt;p&gt;The second day started with Anthony Liguori presenting the &lt;a href="http://www.linux-kvm.org/wiki/images/5/57/2011-forum-qemu-keynote-liguori.pdf"&gt;keynote&lt;/a&gt; on QEMU development. He mentioned how the project has been doing very well with sub-maintainers doing pull requests. A lot of patches have been committed since the last year. Things indeed have improved since the last year, when many people were complaining of patches bit-rotting on the mailing list for ages.&lt;/p&gt;
&lt;p&gt;Avi then took stage again to talk of &lt;a href="http://www.linux-kvm.org/wiki/images/6/6d/Kvm-forum-2011-performance-monitoring.pdf"&gt;performance monitoring in KVM guests&lt;/a&gt;. He talked of providing a Performance Monitoring Unit to the guest via several ways: pass-through, emulating a virtual PMU and emulating a real-life PMU. He also talked of some new PMU features which are not model-specific which can be safely exposed to all guests.&lt;/p&gt;
&lt;p&gt;Alex Graf then presented on &lt;a href="http://www.linux-kvm.org/wiki/images/7/73/2011-forum-ahci.pdf"&gt;AHCI&lt;/a&gt;.  This was a very cool presentation with nice animation effects (too sad it used non-free software to do that -- I don't know if free software can match those effects, though). He showed how AHCI performed much better than the default IDE storage type.  Performance is half-way between virtio-blk and IDE, but since most OSes support AHCI out of the box (notable exception being Windows XP), he made a case for making AHCI the default.  There is some work to be done before we can do that, though.&lt;/p&gt;
&lt;p&gt;Anthony Liguori next talked about &lt;a href="http://www.linux-kvm.org/wiki/images/e/e6/2011-forum-qapi-liguori.pdf"&gt;QAPI and QOM&lt;/a&gt;, the QEMU Object Model.  These refactorings will make QEMU machines much easier to generate, and present a much saner interface to higher-level management tools like libvirt.  The plan is to get as much work done for the impending 1.0 release.  It was refreshing to hear Anthony not talk of replacing code in one big patch (or one big series), and rather work in incremental steps in-tree.  His last year's main point of developing code in separate trees and doing merges had not gone down well with many developers.&lt;/p&gt;
&lt;p&gt;Markus Armbruster then talked on &lt;a href="http://www.linux-kvm.org/wiki/images/b/bc/2011-forum-armbru-qdev.pdf"&gt;qdev&lt;/a&gt;, on where we are, what's left, and what are the major pain points.  qdev conversion still remains one of the TODO items from last year, and the more it gets delayed, the more everything else gets delayed in QEMU (including QOM conversion, which could be an incremental step from qdev).&lt;/p&gt;
&lt;p&gt;Alon Levy then presented on &lt;a href="http://www.linux-kvm.org/wiki/images/f/f1/Spice_Roadmap_KVM_forum_2011.pdf"&gt;SPICE&lt;/a&gt;, the current status as well as the future. The SPICE protocol is an alternative to VNC with a much better focus on high-latency links and more than just video over network.&lt;/p&gt;
&lt;p&gt;Gerd Hoffmann described his work on the &lt;a href="http://www.linux-kvm.org/wiki/images/1/1f/2011-forum-usb.pdf"&gt;USB subsystem&lt;/a&gt;. QEMU could go from the last project to support USB 2 to the first one to support USB 3. He also highlighted the work done on bringing down the CPU usage with USB tablet devices to minimal, a common complaint that was heard from users.&lt;/p&gt;
&lt;p&gt;That ended the first session; the talks I attended in the parallel tracks were:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.linux-kvm.org/wiki/images/b/be/2011-forum-%24graphics-direct-assignment.pdf"&gt;KVM Graphics Device Assignment&lt;/a&gt; by Allen Kay. We had worked together on PCI device assignment a few years back, and now Allen Kay talked of some roadblocks and ideas in implementing graphics device assignment and experiences from doing so in Xen.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.linux-kvm.org/wiki/images/c/cf/2011-forum-qemu_live_block_copy_submit.pdf"&gt;Live block copy in QEMU&lt;/a&gt; is being worked on by a few people, Marcelo Tosatti presented the work done so far and the direction in the future. He talked of how the two seemingly independent features of live block copy and snapshot merges can share code.&lt;/p&gt;
&lt;p&gt;Joerg Roedel then talked of&lt;a href="http://www.linux-kvm.org/wiki/images/b/b1/2011-forum-amd-iommuv2-kvm.pdf"&gt; AMD IOMMU v2 support in KVM&lt;/a&gt;: the new feature set makes it possible to not pin all the guest memory pages on the host.  This alone is a very important feature for the future of device assignment.&lt;/p&gt;
&lt;p&gt;Next up was Juan Quintela's session on &lt;a href="http://www.linux-kvm.org/wiki/images/1/1e/2011-forum-migration.pp.pdf"&gt;Live Migration&lt;/a&gt;.  It was an entertaining ride on the challenges faced and the new directions to take.  One of them was post-copy migration, where the guest memory is faulted over the network after the guest is running on the destination host, since the amount of guest RAM has been increasing over time.&lt;/p&gt;
&lt;p&gt;I missed out on the next two sesions, talking to people.&lt;/p&gt;
&lt;p&gt;I rejoined for &lt;a href="http://www.linux-kvm.org/wiki/images/e/ed/2011-forum-yabusame-postcopy-migration.pdf"&gt;postcopy live migration&lt;/a&gt; by Takahiro Hirofuchi. As promising as it may sound, Anthony wanted to ensure we have eked out maximum performance from the current pre-copy implementation and then look at post-copy.  He also asked for benchmarking results for post-copy migration.  An interesting case here may be to guess the working set of a guest, perform a pre-copy using this set of pages, and then switch to post-copy.  The guessing of working set could be done via a guest agent or using MMU notifiers in the host.&lt;/p&gt;
&lt;p&gt;That ended a very very long two days of the KVM Forum. We Red Hat folks had a dinner hosted by CTO Brian Stevens, so we headed out to the nearby brewery and enjoyed the fresh lager there.&lt;/p&gt;</summary></entry><entry><title>Introduce of network in KVM environment</title><link href="http://localhost:8000/virtualization/introduce-of-network-in-kvm-environment.html" rel="alternate"></link><updated>2011-07-09T02:04:26+08:00</updated><author><name>Amos</name></author><id>tag:localhost:8000,2011-07-09:virtualization/introduce-of-network-in-kvm-environment.html</id><summary type="html">&lt;p&gt;昨天给新人讲了一下KVM环境下网络相关的一些东西，比较基础。&lt;/p&gt;
&lt;p&gt;slides： &lt;a href="http://amosk.info/download/net-kvm-env.pdf"&gt;http://amosk.info/download/net-kvm-env.pdf&lt;/a&gt;&lt;/p&gt;</summary></entry><entry><title>VT[0] - Kernel-based Virtual Machine</title><link href="http://localhost:8000/virtualization/kvm-e8999ae68b9fe58c96-1.html" rel="alternate"></link><updated>2010-12-18T18:36:06+08:00</updated><author><name>Amos</name></author><id>tag:localhost:8000,2010-12-18:virtualization/kvm-e8999ae68b9fe58c96-1.html</id><summary type="html">&lt;p&gt;KVM (Kernel-based Virtual Machine, 不是鼠标 Keyboard Video Mouse 切换器)[1] 是Linux内核虚拟化的基础结构之一。她支持提供intel VT-x AMD-V 扩展的x86处理器的天然虚拟化，已经北移植到了S390, PPC, IA64， ARM的移植正在进行中。
从2.6.20起，KVM正式进入Linux当中，她支持多种Linux发行版，BSD，Solaris,Windows等，修改过的qemu还可以运行Mac OS X
。KVM同时也支持Linux和Windows客户机使用Virtio框架，包括虚拟网卡（virtio-nic）和磁盘I/O控制器（virtio-blk），内&amp;gt;存伸缩设备(virtio-balloon),VGA 图形接口(spice), 虚拟串口设备(virito-serial)等。&lt;/p&gt;
&lt;p&gt;KVM本身并不执行模拟，而是用户空间程序(QEMU)使用/dev/kvm接口设置客户机的虚拟机地址空间，放置模拟I/O和映射图形显&amp;gt;示到真实主机。正对KVM的修改版本QEMU-KVM独立为一个upstream 项目[2]，原来的QEMU [3]到0.10.0才开始支持KVM。&lt;/p&gt;
&lt;p&gt;Virtual-Box的虚拟化是模拟技术，跟一些游戏模拟器一样，虚拟机的请求指令会在用户态模拟的硬件（cpu，内存等）上执行&amp;gt;
，这里的CPU可能与主机的体系结构不一样。KVM则是让虚拟机在host正式的cpu上执行，这里所虚拟的CPU是和正式物理CPU一样的。&lt;/p&gt;
&lt;p&gt;Xen 的功劳就是把虚拟化技术带到了，开源社区里，从而吸引更多人参与到虚拟化的设计开发、应用、商业运作当中。KVM在xen之后实现，则是避免了xen设计上的一些缺陷，更加简单一些。有两种截然不同的设计思路，一种是把一个东西设计的足够简单，让它没有明显没有复杂问题；另一种是把一个东西设计的足够复杂，让他明显没有简单问题。&lt;/p&gt;
&lt;p&gt;关于KVM的使用，最新kernel默认编译了kvm模块，你只需要把kvm 跟 kvm_intel /kvm_amd用modprobe加载就可以，然后就是安装qemu 或者 qemu-kvm，从软件源里应该能下载到。默认使用user-space的网络 （NAT）, 如果要使用桥接网络（虚拟机和主机在局域网了里是对等关系），就需要在主机上设置网桥，这个bridge就是一个虚拟的交换机，虚拟机的‘网线‘插在上面。设置完成，需要用qemu-img 创建虚拟机镜像，相当于准备‘硬盘’。然后你可以从cdrom启动安装系统，或者从网络启动使用pxe+tftp安装系统。安装完，就可以正常启动使用虚拟机了，qemu的命令行很繁多，很多新特新都需要在命令行激活，像vhost，virtio-blk，virtio-net等。这里给出一个ubuntu上KVM的设置[4] ，其他系统基本类似，这里就不重复了。&lt;/p&gt;
&lt;p&gt;[1] http://www.linux-kvm.org/
[2] http://git.kernel.org/?p=virt/kvm/qemu-kvm.git;a=summary
[3] http://wiki.qemu.org/Main_Page
[4] http://forum.ubuntu.org.cn/viewtopic.php?t=154792&lt;/p&gt;</summary></entry><entry><title>KVM Network Model</title><link href="http://localhost:8000/virtualization/kvm-network-model.html" rel="alternate"></link><updated>2010-06-26T23:49:22+08:00</updated><author><name>Amos</name></author><id>tag:localhost:8000,2010-06-26:virtualization/kvm-network-model.html</id><summary type="html">&lt;p&gt;[1] Userspace Virtio network architecture
    [2] Vd-t,sriov architecture
    [3] Vhost_net architecture
    [4] Vhost over sriov &amp;amp; macvtap architecture&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;      &lt;span class="o"&gt;+--------------+&lt;/span&gt;
      &lt;span class="o"&gt;|&lt;/span&gt;  &lt;span class="n"&gt;Guest&lt;/span&gt; &lt;span class="n"&gt;VM&lt;/span&gt;    &lt;span class="o"&gt;|&lt;/span&gt;
      &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="o"&gt;+--+&lt;/span&gt;    &lt;span class="o"&gt;+--+&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;
      &lt;span class="o"&gt;+-|&lt;/span&gt;  &lt;span class="o"&gt;|----|&lt;/span&gt;  &lt;span class="o"&gt;|-+&lt;/span&gt;
        &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;tx&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;    &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;rx&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
      &lt;span class="o"&gt;+-+--+----+--+-+&lt;/span&gt;
      &lt;span class="o"&gt;|&lt;/span&gt;   &lt;span class="err"&gt;\&lt;/span&gt; &lt;span class="n"&gt;QEMU&lt;/span&gt;  &lt;span class="o"&gt;^&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt;
      &lt;span class="o"&gt;|&lt;/span&gt;    &lt;span class="n"&gt;v&lt;/span&gt;     &lt;span class="o"&gt;/&lt;/span&gt;   &lt;span class="o"&gt;|&lt;/span&gt;
      &lt;span class="o"&gt;|&lt;/span&gt;    &lt;span class="o"&gt;+----+&lt;/span&gt;    &lt;span class="o"&gt;|&lt;/span&gt;
      &lt;span class="o"&gt;+----|&lt;/span&gt; &lt;span class="n"&gt;tap&lt;/span&gt;&lt;span class="o"&gt;|----+&lt;/span&gt;
  &lt;span class="o"&gt;+--------|&lt;/span&gt;    &lt;span class="o"&gt;|--------+&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt;        &lt;span class="o"&gt;+----+&lt;/span&gt;        &lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;Kernel&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;HV&lt;/span&gt;  &lt;span class="o"&gt;^&lt;/span&gt;          &lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt;           &lt;span class="o"&gt;|&lt;/span&gt;          &lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt;           &lt;span class="n"&gt;v&lt;/span&gt;          &lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="o"&gt;+------+&lt;/span&gt;       &lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;bridge&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="o"&gt;+------+&lt;/span&gt;       &lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt;           &lt;span class="o"&gt;^&lt;/span&gt;          &lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt;           &lt;span class="o"&gt;|&lt;/span&gt;          &lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt;           &lt;span class="n"&gt;v&lt;/span&gt;          &lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="o"&gt;+------+&lt;/span&gt;       &lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="o"&gt;+-------|&lt;/span&gt; &lt;span class="n"&gt;NIC&lt;/span&gt;  &lt;span class="o"&gt;|-------+&lt;/span&gt;
          &lt;span class="o"&gt;+------+&lt;/span&gt;
              &lt;span class="o"&gt;^&lt;/span&gt;
              &lt;span class="o"&gt;|&lt;/span&gt;
              &lt;span class="n"&gt;v&lt;/span&gt;

      &lt;span class="o"&gt;+------------------------+&lt;/span&gt;
      &lt;span class="o"&gt;|&lt;/span&gt;     &lt;span class="n"&gt;Guest&lt;/span&gt; &lt;span class="n"&gt;VM&lt;/span&gt;           &lt;span class="o"&gt;|&lt;/span&gt;
      &lt;span class="o"&gt;|&lt;/span&gt;              &lt;span class="o"&gt;+--+&lt;/span&gt; &lt;span class="o"&gt;+--+&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;
      &lt;span class="o"&gt;+--------------|&lt;/span&gt;&lt;span class="n"&gt;tx&lt;/span&gt;&lt;span class="o"&gt;|-|&lt;/span&gt;&lt;span class="n"&gt;rx&lt;/span&gt;&lt;span class="o"&gt;|-+&lt;/span&gt;
                     &lt;span class="o"&gt;+--+&lt;/span&gt; &lt;span class="o"&gt;+--+&lt;/span&gt;
                       &lt;span class="o"&gt;^&lt;/span&gt;   &lt;span class="o"&gt;^&lt;/span&gt;
                        &lt;span class="err"&gt;\&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;
                         &lt;span class="o"&gt;|&lt;/span&gt;
                         &lt;span class="n"&gt;v&lt;/span&gt;
      &lt;span class="o"&gt;+--------+&lt;/span&gt;   &lt;span class="o"&gt;+-----------+&lt;/span&gt;
      &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;QEMU&lt;/span&gt;   &lt;span class="o"&gt;|&lt;/span&gt;   &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;VF&lt;/span&gt; &lt;span class="n"&gt;NIC&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;
      &lt;span class="o"&gt;+--------+&lt;/span&gt;   &lt;span class="o"&gt;+-----------+&lt;/span&gt;
  &lt;span class="o"&gt;+----------------------+&lt;/span&gt;  &lt;span class="o"&gt;^&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Kernel&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;HV&lt;/span&gt;            &lt;span class="o"&gt;|&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt;    &lt;span class="o"&gt;+-----------+&lt;/span&gt;     &lt;span class="o"&gt;|&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt;    &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;VF&lt;/span&gt; &lt;span class="n"&gt;NIC&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;     &lt;span class="o"&gt;|&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt;    &lt;span class="o"&gt;+-----------+&lt;/span&gt;     &lt;span class="o"&gt;|&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt;           &lt;span class="o"&gt;^&lt;/span&gt;          &lt;span class="o"&gt;|&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt;           &lt;span class="o"&gt;|&lt;/span&gt;          &lt;span class="o"&gt;|&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt;           &lt;span class="n"&gt;v&lt;/span&gt;          &lt;span class="o"&gt;|&lt;/span&gt;  &lt;span class="n"&gt;v&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="o"&gt;+--------------+----+&lt;/span&gt;
  &lt;span class="o"&gt;+-------|&lt;/span&gt; &lt;span class="n"&gt;Physical&lt;/span&gt; &lt;span class="n"&gt;NIC&lt;/span&gt;      &lt;span class="o"&gt;|&lt;/span&gt;
          &lt;span class="o"&gt;+-------------------+&lt;/span&gt;
              &lt;span class="o"&gt;^&lt;/span&gt;
              &lt;span class="o"&gt;|&lt;/span&gt;
              &lt;span class="n"&gt;v&lt;/span&gt;

      &lt;span class="o"&gt;+------------------------+&lt;/span&gt;
      &lt;span class="o"&gt;|&lt;/span&gt;     &lt;span class="n"&gt;Guest&lt;/span&gt; &lt;span class="n"&gt;VM&lt;/span&gt;           &lt;span class="o"&gt;|&lt;/span&gt;
      &lt;span class="o"&gt;|&lt;/span&gt;              &lt;span class="o"&gt;+--+&lt;/span&gt; &lt;span class="o"&gt;+--+&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;
      &lt;span class="o"&gt;+--------------|&lt;/span&gt;&lt;span class="n"&gt;tx&lt;/span&gt;&lt;span class="o"&gt;|-|&lt;/span&gt;&lt;span class="n"&gt;rx&lt;/span&gt;&lt;span class="o"&gt;|-+&lt;/span&gt;
                     &lt;span class="o"&gt;+--+&lt;/span&gt; &lt;span class="o"&gt;+--+&lt;/span&gt;
       &lt;span class="o"&gt;+--------+&lt;/span&gt;      &lt;span class="o"&gt;^&lt;/span&gt;   &lt;span class="o"&gt;^&lt;/span&gt;
       &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;QEMU&lt;/span&gt;   &lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="err"&gt;\&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;
       &lt;span class="o"&gt;+--------+&lt;/span&gt;        &lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="o"&gt;+----------------------|------+&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Kernel&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;HV&lt;/span&gt;            &lt;span class="n"&gt;v&lt;/span&gt;      &lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt;                 &lt;span class="o"&gt;+-------+&lt;/span&gt;   &lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt;             &lt;span class="o"&gt;+-&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;vhost&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;   &lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt;             &lt;span class="o"&gt;|&lt;/span&gt;   &lt;span class="o"&gt;+-------+&lt;/span&gt;   &lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt;             &lt;span class="n"&gt;v&lt;/span&gt;               &lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="o"&gt;+------+&lt;/span&gt;              &lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;tap&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt;              &lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="o"&gt;+------+&lt;/span&gt;              &lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt;           &lt;span class="o"&gt;^&lt;/span&gt;                 &lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt;           &lt;span class="o"&gt;|&lt;/span&gt;                 &lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt;           &lt;span class="n"&gt;v&lt;/span&gt;                 &lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="o"&gt;+------+&lt;/span&gt;              &lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;bridge&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;              &lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="o"&gt;+------+&lt;/span&gt;              &lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt;           &lt;span class="o"&gt;^&lt;/span&gt;                 &lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt;           &lt;span class="o"&gt;|&lt;/span&gt;                 &lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt;           &lt;span class="n"&gt;v&lt;/span&gt;                 &lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="o"&gt;+------+&lt;/span&gt;              &lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="o"&gt;+-------|&lt;/span&gt; &lt;span class="n"&gt;NIC&lt;/span&gt;  &lt;span class="o"&gt;|--------------+&lt;/span&gt;
          &lt;span class="o"&gt;+------+&lt;/span&gt;
              &lt;span class="o"&gt;^&lt;/span&gt;
              &lt;span class="o"&gt;|&lt;/span&gt;
              &lt;span class="n"&gt;v&lt;/span&gt;

      &lt;span class="o"&gt;+------------------------+&lt;/span&gt;
      &lt;span class="o"&gt;|&lt;/span&gt;     &lt;span class="n"&gt;Guest&lt;/span&gt; &lt;span class="n"&gt;VM&lt;/span&gt;           &lt;span class="o"&gt;|&lt;/span&gt;
      &lt;span class="o"&gt;|&lt;/span&gt;              &lt;span class="o"&gt;+--+&lt;/span&gt; &lt;span class="o"&gt;+--+&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;
      &lt;span class="o"&gt;+--------------|&lt;/span&gt;&lt;span class="n"&gt;tx&lt;/span&gt;&lt;span class="o"&gt;|-|&lt;/span&gt;&lt;span class="n"&gt;rx&lt;/span&gt;&lt;span class="o"&gt;|-+&lt;/span&gt;
                     &lt;span class="o"&gt;+--+&lt;/span&gt; &lt;span class="o"&gt;+--+&lt;/span&gt;
       &lt;span class="o"&gt;+--------+&lt;/span&gt;      &lt;span class="o"&gt;^&lt;/span&gt;   &lt;span class="o"&gt;^&lt;/span&gt;
       &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;QEMU&lt;/span&gt;   &lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="err"&gt;\&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;
       &lt;span class="o"&gt;+--------+&lt;/span&gt;        &lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="o"&gt;+----------------------|------+&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Kernel&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;HV&lt;/span&gt;            &lt;span class="n"&gt;v&lt;/span&gt;      &lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt;                 &lt;span class="o"&gt;+-------+&lt;/span&gt;   &lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt;             &lt;span class="o"&gt;+-&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;vhost&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;   &lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt;             &lt;span class="o"&gt;|&lt;/span&gt;   &lt;span class="o"&gt;+-------+&lt;/span&gt;   &lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt;             &lt;span class="n"&gt;v&lt;/span&gt;               &lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="o"&gt;+---------+&lt;/span&gt;           &lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;macvtap&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;           &lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="o"&gt;+---------+&lt;/span&gt;           &lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt;           &lt;span class="o"&gt;^&lt;/span&gt;                 &lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt;           &lt;span class="o"&gt;|&lt;/span&gt;                 &lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt;           &lt;span class="n"&gt;v&lt;/span&gt;                 &lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="o"&gt;+-----------+&lt;/span&gt; &lt;span class="o"&gt;+-----------+&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;VF&lt;/span&gt; &lt;span class="n"&gt;NIC&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;VF&lt;/span&gt; &lt;span class="n"&gt;NIC&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="o"&gt;+-----------+&lt;/span&gt; &lt;span class="o"&gt;+-----------+&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt;           &lt;span class="o"&gt;^&lt;/span&gt;      &lt;span class="o"&gt;^&lt;/span&gt;          &lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt;           &lt;span class="o"&gt;|&lt;/span&gt;      &lt;span class="o"&gt;|&lt;/span&gt;          &lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt;           &lt;span class="n"&gt;v&lt;/span&gt;      &lt;span class="n"&gt;v&lt;/span&gt;          &lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="o"&gt;+---------------+&lt;/span&gt;     &lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="o"&gt;+-------|&lt;/span&gt; &lt;span class="n"&gt;Physical&lt;/span&gt; &lt;span class="n"&gt;NIC&lt;/span&gt;  &lt;span class="o"&gt;|-----+&lt;/span&gt;
          &lt;span class="o"&gt;+---------------+&lt;/span&gt;
                  &lt;span class="o"&gt;^&lt;/span&gt;
                  &lt;span class="o"&gt;|&lt;/span&gt;
                  &lt;span class="n"&gt;v&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary></entry><entry><title>Virtual Virtio Nic</title><link href="http://localhost:8000/virtualization/virtioe7bd91e58da1.html" rel="alternate"></link><updated>2010-06-01T00:07:56+08:00</updated><author><name>Amos</name></author><id>tag:localhost:8000,2010-06-01:virtualization/virtioe7bd91e58da1.html</id><summary type="html">&lt;p&gt;keywords: network, virtio, vhost, virtualization&lt;/p&gt;
&lt;p&gt;前两周一直在研究网卡offload的特性，目的是通过ethtool设置虚拟网卡功能，进行功能验证。物理网卡、虚拟e1000基本都搞清楚了，rtl8139比较老，很多新特新都不支持，所以忽略。问题就处在了Virtio虚拟网卡上，这个玩意不同于一般的虚拟网卡，不是单纯的硬件模拟，她需要利用内核里边提供的相关API，争取最高性能。由于是内核跟hypervisor相互调用，所以虚拟机用户感知到的网卡功能，也需要hypervisor的支持(特性支持、参数配置等)。
QEMU 有个新参数 "-netdev tap,vhost=on..." 替换了原来的 "-net tap,..."，用于创建网络设备，很多新特性只有在新参数才能使用。比如虚拟网卡的offload功能，老参数需要QEMU实现对offload功能的支持，目前只能使用GSO一种。新参数则可以使用主机内核提供的vhost支持，offload工作由内核中的vhost_net模块来完成，性能提升就不用说了，rx/tx/sg/tso/gso/ufo都支持。开始觉得奇怪，为什么不支持receive offload？offload的思想就是把数据切割/组装尽可能由硬件，或者由较下层(网络层、数据链路层、物理层)做，所以虚拟网卡并不是实际上的最底层，QEMU虚拟机只是物理的一个进程而已，应该交给物理机的硬件/较下层处理，所以virtio网卡不需要received offload。&lt;/p&gt;
&lt;p&gt;用前面主要是花时间搞懂了Virtio在内核中的实现代码，QEMU中的调用、virtio网卡队列的实现等。vhost把虚拟机IO降到内核里已经不是新闻了，所以下面目标转向vhost的实现，需要分析代码。&lt;/p&gt;
&lt;p&gt;virtio:towards a de-facto standard for virtual i o devices: http://ozlabs.org/~rusty/virtio-spec/virtio-paper.pdf
qemu : http://www.qemu.org/
vhostnet: http://fedoraproject.org/wiki/Features/VHostNet
virtio: http://www.linux-kvm.org/page/Virtio&lt;/p&gt;</summary></entry></feed>